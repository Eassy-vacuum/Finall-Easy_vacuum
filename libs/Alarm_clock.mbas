module Alarm_clock
const _THRESHOLD = 240 '' 1000ms / 4 ms for every times overflow
dim counter1,second_alarm_clock as byte external
    minutes_alarm_clock,hours_alarm_clock  as byte external
'dim OCR2_ as hex


sub procedure timer0_init()
sub procedure timer2_init()
implements

sub procedure Key_Port_Init()
    #IFDEF ATmega32a
      ''################PWM Ports #############
       DDD7_bit = 1                    ' Set PORTB pin 3 as output pin for the PWM (according to datasheet)
       DDD6_bit = 1                    ' Set PORTB pin 3 as output pin for the PWM (according to datasheet)
      ''################timer test part #############
    #ENDIF
end sub
 '**************************************************************************************************
'* Call Shamsi
'**************************************************************************************************}
sub procedure timer0_init()
'  // Timer/Counter 0 initialization
'  // Clock source: System Clock
'  // Clock value: 7.813 kHz
'  // Mode: Normal top=0xFF
'  // OC0 output: Disconnected
  TCCR0=0x04
  TCNT0=0x06
  OCR0=0x00
'  // Timer(s)/Counter(s) Interrupt(s) initialization
  TIMSK=0x01
'  // Global enable interrupts
'  #asm("sei")
   SREG_I_bit = 1                                   '' // Enable Interrupts
   Delay_ms(100)
   PORTD6_bit=not PORTD6_bit      ' toggle PORTD6_bit
   second_alarm_clock=0 minutes_alarm_clock=0  hours_alarm_clock=0
end sub

sub procedure timer2_init()
  '// Timer/Counter 2 initialization
  '// Clock source: System Clock
  '// Clock value: 15.625 kHz
  '// Mode: CTC top=OCR2
  '// OC2 output: Disconnected
'  clk = Clock_MHz()
'  OCR2_=62.5*4ms-1=249   TCNT2=256-249=7
  
  ASSR=0x00
  TCCR2=0x0F
  TCNT2=0x06
'  OCR2=0x11
  TOIE2_bit  = 1             ' Timer1 overflow interrupt enable
  
  '// Timer(s)/Counter(s) Interrupt(s) initialization
  TIMSK=0x80
'  // Global enable interrupts
'  #asm("sei")
   SREG_I_bit = 1                                   '' // Enable Interrupts
   Delay_ms(100)
   PORTD6_bit=not PORTD6_bit      ' toggle PORTD6_bit
   second_alarm_clock=0 minutes_alarm_clock=0 hours_alarm_clock=0
end   sub

sub procedure Timer0Overflow_ISR iv IVT_ADDR_TIMER0_OVF
'  // Reinitialize Timer 0 value
   TCNT0=0x06
 if (counter1 >= _THRESHOLD) then
    counter1 = 0              ' reset counter
    inc(second_alarm_clock)
    if  second_alarm_clock>59 then
        second_alarm_clock=0   inc(minutes_alarm_clock) ' reset  second_alarm_clock
    end if
    if minutes_alarm_clock>59 then
       minutes_alarm_clock=0 inc(hours_alarm_clock)
    end if
    if hours_alarm_clock>23 then
       hours_alarm_clock=0
    end if
'    PORTD7_bit=not PORTD7_bit      ' toggle PORTD7_bit
'    PORTD6_bit=not PORTD6_bit      ' toggle PORTD6_bit
    else
      Inc(counter1)           ' increment counter

  end if

end sub

sub procedure Timer2Overflow_ISR iv IVT_ADDR_TIMER2_OVF
'  // Reinitialize Timer 0 value
   TCNT2=0x06
 if (counter1 >= _THRESHOLD) then
    PORTD7_bit=not PORTD7_bit      ' toggle PORTD7_bit
    PORTD6_bit=not PORTD6_bit      ' toggle PORTD6_bit
    counter1 = 0              ' reset counter
    else
      Inc(counter1)           ' increment counter
  end if

end sub
end.

